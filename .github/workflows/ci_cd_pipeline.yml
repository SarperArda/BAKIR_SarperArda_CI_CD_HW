# This is a basic CI/CD pipeline for a Python project. It has three jobs: build, test, and deploy.
# The build job builds the project using the build package. The test job runs the tests using pytest.
# The deploy job builds a Docker image and pushes it to Docker Hub.
# The pipeline is triggered on pushes to the main branch and pull requests to the main branch.
# The pipeline uses GitHub Actions to run the jobs.
# https://docs.github.com/en/actions/learn-github-actions
# Github CoPilot aid is used to create this file.
# @Sarper Arda BAKIR
# @19-04-2024
# @v1.0

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Build the project
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install build dependencies
        run: |
          pip install build

      - name: Build project
        run: |
          python -m build
  # Test the project
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10'] 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: pytest
  # Deploy the project
  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hu
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get commit info
        id: commit_info
        run: echo "::set-output name=commit::$(git rev-parse --short HEAD)"

      - name: Get pull request info
        id: pr_info
        run: echo "::set-output name=pr_number::${{ github.event.pull_request.number }}"

      - name: Build and push Docker image
        run: |
          docker build \
            --build-arg COMMIT_SHA=${{ steps.commit_info.outputs.commit }} \
            --build-arg PR_NUMBER=${{ steps.pr_info.outputs.pr_number }} \
            -t sarperarda/sarperardabakir_ci_cd_hw .
          docker push sarperarda/sarperardabakir_ci_cd_hw
